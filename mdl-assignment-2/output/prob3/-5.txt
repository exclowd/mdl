1936
[  0. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.   0. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.   0. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
   0. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.   0. -25. -25. -25. -25. -25. -25. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25.   0.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.   0. -25.
 -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25. -25.
 -25.   0.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.  -5.
  -5.  -5.  -5.  -5.]
===============================================================================
                                     CVXPY                                     
                                    v1.1.11                                    
===============================================================================
(CVXPY) Apr 07 02:00:12 PM: Your problem has 1936 variables, 2 constraints, and 0 parameters.
(CVXPY) Apr 07 02:00:12 PM: It is compliant with the following grammars: DCP, DQCP
(CVXPY) Apr 07 02:00:12 PM: (If you need to solve this problem multiple times, but with different data, consider using parameters.)
(CVXPY) Apr 07 02:00:12 PM: CVXPY will first compile your problem; then, it will invoke a numerical solver to obtain a solution.
-------------------------------------------------------------------------------
                                  Compilation                                  
-------------------------------------------------------------------------------
(CVXPY) Apr 07 02:00:12 PM: Compiling problem (target solver=ECOS).
(CVXPY) Apr 07 02:00:12 PM: Reduction chain: FlipObjective -> Dcp2Cone -> CvxAttr2Constr -> ConeMatrixStuffing -> ECOS
(CVXPY) Apr 07 02:00:12 PM: Applying reduction FlipObjective
(CVXPY) Apr 07 02:00:12 PM: Applying reduction Dcp2Cone
(CVXPY) Apr 07 02:00:12 PM: Applying reduction CvxAttr2Constr
(CVXPY) Apr 07 02:00:12 PM: Applying reduction ConeMatrixStuffing
(CVXPY) Apr 07 02:00:12 PM: Applying reduction ECOS
(CVXPY) Apr 07 02:00:12 PM: Finished problem compilation (took 3.598e-02 seconds).
(CVXPY) Apr 07 02:00:12 PM: (Subsequent compilations of this problem, using the same arguments, should take less time.)
-------------------------------------------------------------------------------
                                Numerical solver                               
-------------------------------------------------------------------------------
(CVXPY) Apr 07 02:00:12 PM: Invoking solver ECOS to obtain a solution.

ECOS 2.0.7 - (C) embotech GmbH, Zurich Switzerland, 2012-15. Web: www.embotech.com/ECOS

It     pcost       dcost      gap   pres   dres    k/t    mu     step   sigma     IR    |   BT
 0  -2.026e+01  -2.026e+01  +3e+04  1e+00  2e-01  1e+00  1e+01    ---    ---    1  1  - |  -  - 
 1  -7.850e+00  -6.007e+00  +7e+03  4e-01  3e-02  2e+00  4e+00  0.8714  2e-01   0  0  1 |  0  0
 2  +2.110e+01  +2.210e+01  +4e+03  3e-01  2e-02  1e+00  2e+00  0.5514  1e-01   0  0  1 |  0  0
 3  +5.856e+01  +5.946e+01  +3e+03  4e-01  1e-02  1e+00  1e+00  0.4601  5e-01   0  1  1 |  0  0
 4  +1.104e+02  +1.110e+02  +1e+03  3e-01  6e-03  6e-01  8e-01  0.5946  2e-01   0  1  1 |  0  0
 5  +1.489e+02  +1.493e+02  +9e+02  2e-01  3e-03  4e-01  5e-01  0.5481  3e-01   0  1  1 |  0  0
 6  +1.655e+02  +1.657e+02  +5e+02  1e-01  2e-03  2e-01  3e-01  0.5561  3e-01   0  1  0 |  0  0
 7  +1.792e+02  +1.794e+02  +3e+02  7e-02  1e-03  1e-01  2e-01  0.5248  2e-01   0  1  1 |  0  0
 8  +1.892e+02  +1.893e+02  +1e+02  3e-02  4e-04  5e-02  7e-02  0.6867  2e-01   0  1  1 |  0  0
 9  +1.918e+02  +1.919e+02  +9e+01  1e-02  3e-04  3e-02  5e-02  0.5103  3e-01   1  0  0 |  0  0
10  +1.938e+02  +1.938e+02  +4e+01  4e-03  1e-04  1e-02  2e-02  0.8344  3e-01   1  0  0 |  0  0
11  +1.950e+02  +1.950e+02  +1e+01  2e-03  4e-05  5e-03  8e-03  0.7154  2e-01   1  0  0 |  0  0
12  +1.954e+02  +1.954e+02  +7e+00  7e-04  2e-05  2e-03  4e-03  0.6923  3e-01   1  0  0 |  0  0
13  +1.957e+02  +1.957e+02  +3e+00  3e-04  9e-06  1e-03  2e-03  0.7398  3e-01   1  0  0 |  0  0
14  +1.958e+02  +1.958e+02  +1e+00  1e-04  4e-06  5e-04  7e-04  0.7076  2e-01   1  1  0 |  0  0
15  +1.958e+02  +1.958e+02  +9e-01  8e-05  2e-06  3e-04  4e-04  0.5689  3e-01   1  0  0 |  0  0
16  +1.958e+02  +1.958e+02  +7e-01  6e-05  2e-06  2e-04  4e-04  0.3160  5e-01   1  0  0 |  0  0
17  +1.958e+02  +1.958e+02  +5e-01  4e-05  1e-06  2e-04  2e-04  0.4010  1e-01   1  0  0 |  0  0
18  +1.959e+02  +1.959e+02  +4e-01  4e-05  1e-06  1e-04  2e-04  0.4130  8e-01   1  0  0 |  0  0
19  +1.959e+02  +1.959e+02  +1e-01  1e-05  4e-07  5e-05  8e-05  0.6887  5e-02   1  1  1 |  0  0
20  +1.959e+02  +1.959e+02  +1e-01  1e-05  3e-07  4e-05  6e-05  0.4028  3e-01   1  0  0 |  0  0
21  +1.959e+02  +1.959e+02  +1e-01  9e-06  3e-07  3e-05  5e-05  0.3941  9e-01   1  0  1 |  0  0
22  +1.959e+02  +1.959e+02  +2e-02  2e-06  6e-08  8e-06  1e-05  0.8620  1e-01   1  0  0 |  0  0
23  +1.959e+02  +1.959e+02  +1e-02  1e-06  3e-08  4e-06  6e-06  0.6147  3e-01   1  1  0 |  0  0
24  +1.959e+02  +1.959e+02  +4e-03  4e-07  1e-08  1e-06  2e-06  0.9890  3e-01   1  0  1 |  0  0
25  +1.959e+02  +1.959e+02  +2e-03  2e-07  6e-09  8e-07  1e-06  0.7090  3e-01   1  1  1 |  0  0
26  +1.959e+02  +1.959e+02  +5e-04  6e-08  1e-09  2e-07  2e-07  0.8214  3e-02   1  1  0 |  0  0
27  +1.959e+02  +1.959e+02  +1e-04  3e-08  3e-10  4e-08  6e-08  0.8904  2e-01   1  0  0 |  0  0
28  +1.959e+02  +1.959e+02  +4e-05  2e-08  1e-10  1e-08  2e-08  0.7851  1e-01   1  0  0 |  0  0
29  +1.959e+02  +1.959e+02  +2e-05  9e-09  6e-11  7e-09  1e-08  0.9890  5e-01   1  0  0 |  0  0
30  +1.959e+02  +1.959e+02  +1e-06  5e-09  3e-12  4e-10  6e-10  0.9499  3e-03   1  0  0 |  0  0

OPTIMAL (within feastol=5.1e-09, reltol=5.7e-09, abstol=1.1e-06).
Runtime: 0.119122 seconds.

-------------------------------------------------------------------------------
                                    Summary                                    
-------------------------------------------------------------------------------
(CVXPY) Apr 07 02:00:12 PM: Problem status: optimal
(CVXPY) Apr 07 02:00:12 PM: Optimal value: -1.959e+02
(CVXPY) Apr 07 02:00:12 PM: Compilation took 3.598e-02 seconds
(CVXPY) Apr 07 02:00:12 PM: Solver (including time spent in interface) took 1.193e-01 seconds
-195.88555010519443
(0, 'C', 0, 0, 'R', 0) => NONE
(1, 'C', 0, 0, 'R', 25) => RIGHT
(2, 'C', 0, 0, 'R', 50) => RIGHT
(3, 'C', 0, 0, 'R', 75) => RIGHT
(4, 'C', 0, 0, 'R', 100) => RIGHT
(5, 'C', 0, 0, 'D', 0) => NONE
(6, 'C', 0, 0, 'D', 25) => RIGHT
(7, 'C', 0, 0, 'D', 50) => RIGHT
(8, 'C', 0, 0, 'D', 75) => RIGHT
(9, 'C', 0, 0, 'D', 100) => RIGHT
(10, 'C', 0, 1, 'R', 0) => NONE
(11, 'C', 0, 1, 'R', 25) => DOWN
(12, 'C', 0, 1, 'R', 50) => RIGHT
(13, 'C', 0, 1, 'R', 75) => DOWN
(14, 'C', 0, 1, 'R', 100) => SHOOT
(15, 'C', 0, 1, 'D', 0) => NONE
(16, 'C', 0, 1, 'D', 25) => RIGHT
(17, 'C', 0, 1, 'D', 50) => RIGHT
(18, 'C', 0, 1, 'D', 75) => RIGHT
(19, 'C', 0, 1, 'D', 100) => SHOOT
(20, 'C', 0, 2, 'R', 0) => NONE
(21, 'C', 0, 2, 'R', 25) => LEFT
(22, 'C', 0, 2, 'R', 50) => DOWN
(23, 'C', 0, 2, 'R', 75) => DOWN
(24, 'C', 0, 2, 'R', 100) => RIGHT
(25, 'C', 0, 2, 'D', 0) => NONE
(26, 'C', 0, 2, 'D', 25) => RIGHT
(27, 'C', 0, 2, 'D', 50) => RIGHT
(28, 'C', 0, 2, 'D', 75) => RIGHT
(29, 'C', 0, 2, 'D', 100) => RIGHT
(30, 'C', 0, 3, 'R', 0) => NONE
(31, 'C', 0, 3, 'R', 25) => LEFT
(32, 'C', 0, 3, 'R', 50) => LEFT
(33, 'C', 0, 3, 'R', 75) => DOWN
(34, 'C', 0, 3, 'R', 100) => DOWN
(35, 'C', 0, 3, 'D', 0) => NONE
(36, 'C', 0, 3, 'D', 25) => RIGHT
(37, 'C', 0, 3, 'D', 50) => RIGHT
(38, 'C', 0, 3, 'D', 75) => RIGHT
(39, 'C', 0, 3, 'D', 100) => RIGHT
(40, 'C', 1, 0, 'R', 0) => NONE
(41, 'C', 1, 0, 'R', 25) => UP
(42, 'C', 1, 0, 'R', 50) => UP
(43, 'C', 1, 0, 'R', 75) => UP
(44, 'C', 1, 0, 'R', 100) => RIGHT
(45, 'C', 1, 0, 'D', 0) => NONE
(46, 'C', 1, 0, 'D', 25) => UP
(47, 'C', 1, 0, 'D', 50) => RIGHT
(48, 'C', 1, 0, 'D', 75) => UP
(49, 'C', 1, 0, 'D', 100) => RIGHT
(50, 'C', 1, 1, 'R', 0) => NONE
(51, 'C', 1, 1, 'R', 25) => SHOOT
(52, 'C', 1, 1, 'R', 50) => UP
(53, 'C', 1, 1, 'R', 75) => UP
(54, 'C', 1, 1, 'R', 100) => SHOOT
(55, 'C', 1, 1, 'D', 0) => NONE
(56, 'C', 1, 1, 'D', 25) => RIGHT
(57, 'C', 1, 1, 'D', 50) => UP
(58, 'C', 1, 1, 'D', 75) => RIGHT
(59, 'C', 1, 1, 'D', 100) => SHOOT
(60, 'C', 1, 2, 'R', 0) => NONE
(61, 'C', 1, 2, 'R', 25) => LEFT
(62, 'C', 1, 2, 'R', 50) => UP
(63, 'C', 1, 2, 'R', 75) => UP
(64, 'C', 1, 2, 'R', 100) => UP
(65, 'C', 1, 2, 'D', 0) => NONE
(66, 'C', 1, 2, 'D', 25) => RIGHT
(67, 'C', 1, 2, 'D', 50) => RIGHT
(68, 'C', 1, 2, 'D', 75) => RIGHT
(69, 'C', 1, 2, 'D', 100) => RIGHT
(70, 'C', 1, 3, 'R', 0) => NONE
(71, 'C', 1, 3, 'R', 25) => LEFT
(72, 'C', 1, 3, 'R', 50) => LEFT
(73, 'C', 1, 3, 'R', 75) => DOWN
(74, 'C', 1, 3, 'R', 100) => LEFT
(75, 'C', 1, 3, 'D', 0) => NONE
(76, 'C', 1, 3, 'D', 25) => RIGHT
(77, 'C', 1, 3, 'D', 50) => RIGHT
(78, 'C', 1, 3, 'D', 75) => RIGHT
(79, 'C', 1, 3, 'D', 100) => RIGHT
(80, 'C', 2, 0, 'R', 0) => NONE
(81, 'C', 2, 0, 'R', 25) => UP
(82, 'C', 2, 0, 'R', 50) => UP
(83, 'C', 2, 0, 'R', 75) => UP
(84, 'C', 2, 0, 'R', 100) => UP
(85, 'C', 2, 0, 'D', 0) => NONE
(86, 'C', 2, 0, 'D', 25) => UP
(87, 'C', 2, 0, 'D', 50) => UP
(88, 'C', 2, 0, 'D', 75) => UP
(89, 'C', 2, 0, 'D', 100) => RIGHT
(90, 'C', 2, 1, 'R', 0) => NONE
(91, 'C', 2, 1, 'R', 25) => SHOOT
(92, 'C', 2, 1, 'R', 50) => UP
(93, 'C', 2, 1, 'R', 75) => UP
(94, 'C', 2, 1, 'R', 100) => UP
(95, 'C', 2, 1, 'D', 0) => NONE
(96, 'C', 2, 1, 'D', 25) => RIGHT
(97, 'C', 2, 1, 'D', 50) => UP
(98, 'C', 2, 1, 'D', 75) => UP
(99, 'C', 2, 1, 'D', 100) => SHOOT
(100, 'C', 2, 2, 'R', 0) => NONE
(101, 'C', 2, 2, 'R', 25) => RIGHT
(102, 'C', 2, 2, 'R', 50) => UP
(103, 'C', 2, 2, 'R', 75) => UP
(104, 'C', 2, 2, 'R', 100) => UP
(105, 'C', 2, 2, 'D', 0) => NONE
(106, 'C', 2, 2, 'D', 25) => SHOOT
(107, 'C', 2, 2, 'D', 50) => RIGHT
(108, 'C', 2, 2, 'D', 75) => RIGHT
(109, 'C', 2, 2, 'D', 100) => RIGHT
(110, 'C', 2, 3, 'R', 0) => NONE
(111, 'C', 2, 3, 'R', 25) => STAY
(112, 'C', 2, 3, 'R', 50) => LEFT
(113, 'C', 2, 3, 'R', 75) => DOWN
(114, 'C', 2, 3, 'R', 100) => LEFT
(115, 'C', 2, 3, 'D', 0) => NONE
(116, 'C', 2, 3, 'D', 25) => SHOOT
(117, 'C', 2, 3, 'D', 50) => RIGHT
(118, 'C', 2, 3, 'D', 75) => RIGHT
(119, 'C', 2, 3, 'D', 100) => RIGHT
(120, 'N', 0, 0, 'R', 0) => NONE
(121, 'N', 0, 0, 'R', 25) => STAY
(122, 'N', 0, 0, 'R', 50) => STAY
(123, 'N', 0, 0, 'R', 75) => DOWN
(124, 'N', 0, 0, 'R', 100) => DOWN
(125, 'N', 0, 0, 'D', 0) => NONE
(126, 'N', 0, 0, 'D', 25) => STAY
(127, 'N', 0, 0, 'D', 50) => STAY
(128, 'N', 0, 0, 'D', 75) => DOWN
(129, 'N', 0, 0, 'D', 100) => DOWN
(130, 'N', 0, 1, 'R', 0) => NONE
(131, 'N', 0, 1, 'R', 25) => STAY
(132, 'N', 0, 1, 'R', 50) => STAY
(133, 'N', 0, 1, 'R', 75) => STAY
(134, 'N', 0, 1, 'R', 100) => STAY
(135, 'N', 0, 1, 'D', 0) => NONE
(136, 'N', 0, 1, 'D', 25) => DOWN
(137, 'N', 0, 1, 'D', 50) => DOWN
(138, 'N', 0, 1, 'D', 75) => DOWN
(139, 'N', 0, 1, 'D', 100) => STAY
(140, 'N', 0, 2, 'R', 0) => NONE
(141, 'N', 0, 2, 'R', 25) => STAY
(142, 'N', 0, 2, 'R', 50) => STAY
(143, 'N', 0, 2, 'R', 75) => STAY
(144, 'N', 0, 2, 'R', 100) => STAY
(145, 'N', 0, 2, 'D', 0) => NONE
(146, 'N', 0, 2, 'D', 25) => DOWN
(147, 'N', 0, 2, 'D', 50) => DOWN
(148, 'N', 0, 2, 'D', 75) => DOWN
(149, 'N', 0, 2, 'D', 100) => DOWN
(150, 'N', 0, 3, 'R', 0) => NONE
(151, 'N', 0, 3, 'R', 25) => STAY
(152, 'N', 0, 3, 'R', 50) => STAY
(153, 'N', 0, 3, 'R', 75) => STAY
(154, 'N', 0, 3, 'R', 100) => STAY
(155, 'N', 0, 3, 'D', 0) => NONE
(156, 'N', 0, 3, 'D', 25) => DOWN
(157, 'N', 0, 3, 'D', 50) => DOWN
(158, 'N', 0, 3, 'D', 75) => DOWN
(159, 'N', 0, 3, 'D', 100) => DOWN
(160, 'N', 1, 0, 'R', 0) => NONE
(161, 'N', 1, 0, 'R', 25) => CRAFT
(162, 'N', 1, 0, 'R', 50) => CRAFT
(163, 'N', 1, 0, 'R', 75) => CRAFT
(164, 'N', 1, 0, 'R', 100) => DOWN
(165, 'N', 1, 0, 'D', 0) => NONE
(166, 'N', 1, 0, 'D', 25) => CRAFT
(167, 'N', 1, 0, 'D', 50) => DOWN
(168, 'N', 1, 0, 'D', 75) => CRAFT
(169, 'N', 1, 0, 'D', 100) => DOWN
(170, 'N', 1, 1, 'R', 0) => NONE
(171, 'N', 1, 1, 'R', 25) => CRAFT
(172, 'N', 1, 1, 'R', 50) => CRAFT
(173, 'N', 1, 1, 'R', 75) => CRAFT
(174, 'N', 1, 1, 'R', 100) => DOWN
(175, 'N', 1, 1, 'D', 0) => NONE
(176, 'N', 1, 1, 'D', 25) => DOWN
(177, 'N', 1, 1, 'D', 50) => CRAFT
(178, 'N', 1, 1, 'D', 75) => CRAFT
(179, 'N', 1, 1, 'D', 100) => CRAFT
(180, 'N', 1, 2, 'R', 0) => NONE
(181, 'N', 1, 2, 'R', 25) => STAY
(182, 'N', 1, 2, 'R', 50) => CRAFT
(183, 'N', 1, 2, 'R', 75) => CRAFT
(184, 'N', 1, 2, 'R', 100) => CRAFT
(185, 'N', 1, 2, 'D', 0) => NONE
(186, 'N', 1, 2, 'D', 25) => DOWN
(187, 'N', 1, 2, 'D', 50) => DOWN
(188, 'N', 1, 2, 'D', 75) => CRAFT
(189, 'N', 1, 2, 'D', 100) => DOWN
(190, 'N', 1, 3, 'R', 0) => NONE
(191, 'N', 1, 3, 'R', 25) => STAY
(192, 'N', 1, 3, 'R', 50) => STAY
(193, 'N', 1, 3, 'R', 75) => CRAFT
(194, 'N', 1, 3, 'R', 100) => STAY
(195, 'N', 1, 3, 'D', 0) => NONE
(196, 'N', 1, 3, 'D', 25) => DOWN
(197, 'N', 1, 3, 'D', 50) => DOWN
(198, 'N', 1, 3, 'D', 75) => DOWN
(199, 'N', 1, 3, 'D', 100) => DOWN
(200, 'N', 2, 0, 'R', 0) => NONE
(201, 'N', 2, 0, 'R', 25) => CRAFT
(202, 'N', 2, 0, 'R', 50) => CRAFT
(203, 'N', 2, 0, 'R', 75) => CRAFT
(204, 'N', 2, 0, 'R', 100) => DOWN
(205, 'N', 2, 0, 'D', 0) => NONE
(206, 'N', 2, 0, 'D', 25) => CRAFT
(207, 'N', 2, 0, 'D', 50) => CRAFT
(208, 'N', 2, 0, 'D', 75) => CRAFT
(209, 'N', 2, 0, 'D', 100) => CRAFT
(210, 'N', 2, 1, 'R', 0) => NONE
(211, 'N', 2, 1, 'R', 25) => STAY
(212, 'N', 2, 1, 'R', 50) => CRAFT
(213, 'N', 2, 1, 'R', 75) => CRAFT
(214, 'N', 2, 1, 'R', 100) => CRAFT
(215, 'N', 2, 1, 'D', 0) => NONE
(216, 'N', 2, 1, 'D', 25) => STAY
(217, 'N', 2, 1, 'D', 50) => CRAFT
(218, 'N', 2, 1, 'D', 75) => CRAFT
(219, 'N', 2, 1, 'D', 100) => CRAFT
(220, 'N', 2, 2, 'R', 0) => NONE
(221, 'N', 2, 2, 'R', 25) => STAY
(222, 'N', 2, 2, 'R', 50) => CRAFT
(223, 'N', 2, 2, 'R', 75) => CRAFT
(224, 'N', 2, 2, 'R', 100) => CRAFT
(225, 'N', 2, 2, 'D', 0) => NONE
(226, 'N', 2, 2, 'D', 25) => STAY
(227, 'N', 2, 2, 'D', 50) => CRAFT
(228, 'N', 2, 2, 'D', 75) => CRAFT
(229, 'N', 2, 2, 'D', 100) => DOWN
(230, 'N', 2, 3, 'R', 0) => NONE
(231, 'N', 2, 3, 'R', 25) => STAY
(232, 'N', 2, 3, 'R', 50) => STAY
(233, 'N', 2, 3, 'R', 75) => CRAFT
(234, 'N', 2, 3, 'R', 100) => STAY
(235, 'N', 2, 3, 'D', 0) => NONE
(236, 'N', 2, 3, 'D', 25) => STAY
(237, 'N', 2, 3, 'D', 50) => CRAFT
(238, 'N', 2, 3, 'D', 75) => DOWN
(239, 'N', 2, 3, 'D', 100) => DOWN
(240, 'S', 0, 0, 'R', 0) => NONE
(241, 'S', 0, 0, 'R', 25) => GATHER
(242, 'S', 0, 0, 'R', 50) => STAY
(243, 'S', 0, 0, 'R', 75) => UP
(244, 'S', 0, 0, 'R', 100) => UP
(245, 'S', 0, 0, 'D', 0) => NONE
(246, 'S', 0, 0, 'D', 25) => GATHER
(247, 'S', 0, 0, 'D', 50) => UP
(248, 'S', 0, 0, 'D', 75) => UP
(249, 'S', 0, 0, 'D', 100) => UP
(250, 'S', 0, 1, 'R', 0) => NONE
(251, 'S', 0, 1, 'R', 25) => STAY
(252, 'S', 0, 1, 'R', 50) => GATHER
(253, 'S', 0, 1, 'R', 75) => GATHER
(254, 'S', 0, 1, 'R', 100) => GATHER
(255, 'S', 0, 1, 'D', 0) => NONE
(256, 'S', 0, 1, 'D', 25) => UP
(257, 'S', 0, 1, 'D', 50) => GATHER
(258, 'S', 0, 1, 'D', 75) => UP
(259, 'S', 0, 1, 'D', 100) => GATHER
(260, 'S', 0, 2, 'R', 0) => NONE
(261, 'S', 0, 2, 'R', 25) => STAY
(262, 'S', 0, 2, 'R', 50) => GATHER
(263, 'S', 0, 2, 'R', 75) => GATHER
(264, 'S', 0, 2, 'R', 100) => GATHER
(265, 'S', 0, 2, 'D', 0) => NONE
(266, 'S', 0, 2, 'D', 25) => UP
(267, 'S', 0, 2, 'D', 50) => UP
(268, 'S', 0, 2, 'D', 75) => UP
(269, 'S', 0, 2, 'D', 100) => GATHER
(270, 'S', 0, 3, 'R', 0) => NONE
(271, 'S', 0, 3, 'R', 25) => STAY
(272, 'S', 0, 3, 'R', 50) => GATHER
(273, 'S', 0, 3, 'R', 75) => GATHER
(274, 'S', 0, 3, 'R', 100) => STAY
(275, 'S', 0, 3, 'D', 0) => NONE
(276, 'S', 0, 3, 'D', 25) => STAY
(277, 'S', 0, 3, 'D', 50) => UP
(278, 'S', 0, 3, 'D', 75) => UP
(279, 'S', 0, 3, 'D', 100) => UP
(280, 'S', 1, 0, 'R', 0) => NONE
(281, 'S', 1, 0, 'R', 25) => GATHER
(282, 'S', 1, 0, 'R', 50) => GATHER
(283, 'S', 1, 0, 'R', 75) => UP
(284, 'S', 1, 0, 'R', 100) => UP
(285, 'S', 1, 0, 'D', 0) => NONE
(286, 'S', 1, 0, 'D', 25) => GATHER
(287, 'S', 1, 0, 'D', 50) => GATHER
(288, 'S', 1, 0, 'D', 75) => UP
(289, 'S', 1, 0, 'D', 100) => UP
(290, 'S', 1, 1, 'R', 0) => NONE
(291, 'S', 1, 1, 'R', 25) => GATHER
(292, 'S', 1, 1, 'R', 50) => UP
(293, 'S', 1, 1, 'R', 75) => GATHER
(294, 'S', 1, 1, 'R', 100) => UP
(295, 'S', 1, 1, 'D', 0) => NONE
(296, 'S', 1, 1, 'D', 25) => UP
(297, 'S', 1, 1, 'D', 50) => UP
(298, 'S', 1, 1, 'D', 75) => UP
(299, 'S', 1, 1, 'D', 100) => UP
(300, 'S', 1, 2, 'R', 0) => NONE
(301, 'S', 1, 2, 'R', 25) => GATHER
(302, 'S', 1, 2, 'R', 50) => GATHER
(303, 'S', 1, 2, 'R', 75) => GATHER
(304, 'S', 1, 2, 'R', 100) => STAY
(305, 'S', 1, 2, 'D', 0) => NONE
(306, 'S', 1, 2, 'D', 25) => UP
(307, 'S', 1, 2, 'D', 50) => UP
(308, 'S', 1, 2, 'D', 75) => UP
(309, 'S', 1, 2, 'D', 100) => UP
(310, 'S', 1, 3, 'R', 0) => NONE
(311, 'S', 1, 3, 'R', 25) => GATHER
(312, 'S', 1, 3, 'R', 50) => GATHER
(313, 'S', 1, 3, 'R', 75) => GATHER
(314, 'S', 1, 3, 'R', 100) => STAY
(315, 'S', 1, 3, 'D', 0) => NONE
(316, 'S', 1, 3, 'D', 25) => UP
(317, 'S', 1, 3, 'D', 50) => UP
(318, 'S', 1, 3, 'D', 75) => UP
(319, 'S', 1, 3, 'D', 100) => UP
(320, 'S', 2, 0, 'R', 0) => NONE
(321, 'S', 2, 0, 'R', 25) => UP
(322, 'S', 2, 0, 'R', 50) => UP
(323, 'S', 2, 0, 'R', 75) => UP
(324, 'S', 2, 0, 'R', 100) => UP
(325, 'S', 2, 0, 'D', 0) => NONE
(326, 'S', 2, 0, 'D', 25) => UP
(327, 'S', 2, 0, 'D', 50) => UP
(328, 'S', 2, 0, 'D', 75) => UP
(329, 'S', 2, 0, 'D', 100) => UP
(330, 'S', 2, 1, 'R', 0) => NONE
(331, 'S', 2, 1, 'R', 25) => STAY
(332, 'S', 2, 1, 'R', 50) => UP
(333, 'S', 2, 1, 'R', 75) => GATHER
(334, 'S', 2, 1, 'R', 100) => UP
(335, 'S', 2, 1, 'D', 0) => NONE
(336, 'S', 2, 1, 'D', 25) => UP
(337, 'S', 2, 1, 'D', 50) => UP
(338, 'S', 2, 1, 'D', 75) => UP
(339, 'S', 2, 1, 'D', 100) => UP
(340, 'S', 2, 2, 'R', 0) => NONE
(341, 'S', 2, 2, 'R', 25) => STAY
(342, 'S', 2, 2, 'R', 50) => GATHER
(343, 'S', 2, 2, 'R', 75) => GATHER
(344, 'S', 2, 2, 'R', 100) => STAY
(345, 'S', 2, 2, 'D', 0) => NONE
(346, 'S', 2, 2, 'D', 25) => UP
(347, 'S', 2, 2, 'D', 50) => UP
(348, 'S', 2, 2, 'D', 75) => UP
(349, 'S', 2, 2, 'D', 100) => UP
(350, 'S', 2, 3, 'R', 0) => NONE
(351, 'S', 2, 3, 'R', 25) => STAY
(352, 'S', 2, 3, 'R', 50) => GATHER
(353, 'S', 2, 3, 'R', 75) => GATHER
(354, 'S', 2, 3, 'R', 100) => STAY
(355, 'S', 2, 3, 'D', 0) => NONE
(356, 'S', 2, 3, 'D', 25) => UP
(357, 'S', 2, 3, 'D', 50) => UP
(358, 'S', 2, 3, 'D', 75) => UP
(359, 'S', 2, 3, 'D', 100) => UP
(360, 'W', 0, 0, 'R', 0) => NONE
(361, 'W', 0, 0, 'R', 25) => STAY
(362, 'W', 0, 0, 'R', 50) => RIGHT
(363, 'W', 0, 0, 'R', 75) => RIGHT
(364, 'W', 0, 0, 'R', 100) => RIGHT
(365, 'W', 0, 0, 'D', 0) => NONE
(366, 'W', 0, 0, 'D', 25) => RIGHT
(367, 'W', 0, 0, 'D', 50) => RIGHT
(368, 'W', 0, 0, 'D', 75) => RIGHT
(369, 'W', 0, 0, 'D', 100) => RIGHT
(370, 'W', 0, 1, 'R', 0) => NONE
(371, 'W', 0, 1, 'R', 25) => STAY
(372, 'W', 0, 1, 'R', 50) => SHOOT
(373, 'W', 0, 1, 'R', 75) => STAY
(374, 'W', 0, 1, 'R', 100) => SHOOT
(375, 'W', 0, 1, 'D', 0) => NONE
(376, 'W', 0, 1, 'D', 25) => RIGHT
(377, 'W', 0, 1, 'D', 50) => SHOOT
(378, 'W', 0, 1, 'D', 75) => RIGHT
(379, 'W', 0, 1, 'D', 100) => RIGHT
(380, 'W', 0, 2, 'R', 0) => NONE
(381, 'W', 0, 2, 'R', 25) => SHOOT
(382, 'W', 0, 2, 'R', 50) => STAY
(383, 'W', 0, 2, 'R', 75) => SHOOT
(384, 'W', 0, 2, 'R', 100) => STAY
(385, 'W', 0, 2, 'D', 0) => NONE
(386, 'W', 0, 2, 'D', 25) => SHOOT
(387, 'W', 0, 2, 'D', 50) => RIGHT
(388, 'W', 0, 2, 'D', 75) => RIGHT
(389, 'W', 0, 2, 'D', 100) => RIGHT
(390, 'W', 0, 3, 'R', 0) => NONE
(391, 'W', 0, 3, 'R', 25) => SHOOT
(392, 'W', 0, 3, 'R', 50) => SHOOT
(393, 'W', 0, 3, 'R', 75) => STAY
(394, 'W', 0, 3, 'R', 100) => SHOOT
(395, 'W', 0, 3, 'D', 0) => NONE
(396, 'W', 0, 3, 'D', 25) => RIGHT
(397, 'W', 0, 3, 'D', 50) => RIGHT
(398, 'W', 0, 3, 'D', 75) => RIGHT
(399, 'W', 0, 3, 'D', 100) => RIGHT
(400, 'W', 1, 0, 'R', 0) => NONE
(401, 'W', 1, 0, 'R', 25) => STAY
(402, 'W', 1, 0, 'R', 50) => STAY
(403, 'W', 1, 0, 'R', 75) => STAY
(404, 'W', 1, 0, 'R', 100) => RIGHT
(405, 'W', 1, 0, 'D', 0) => NONE
(406, 'W', 1, 0, 'D', 25) => RIGHT
(407, 'W', 1, 0, 'D', 50) => RIGHT
(408, 'W', 1, 0, 'D', 75) => RIGHT
(409, 'W', 1, 0, 'D', 100) => RIGHT
(410, 'W', 1, 1, 'R', 0) => NONE
(411, 'W', 1, 1, 'R', 25) => STAY
(412, 'W', 1, 1, 'R', 50) => SHOOT
(413, 'W', 1, 1, 'R', 75) => STAY
(414, 'W', 1, 1, 'R', 100) => SHOOT
(415, 'W', 1, 1, 'D', 0) => NONE
(416, 'W', 1, 1, 'D', 25) => RIGHT
(417, 'W', 1, 1, 'D', 50) => RIGHT
(418, 'W', 1, 1, 'D', 75) => RIGHT
(419, 'W', 1, 1, 'D', 100) => RIGHT
(420, 'W', 1, 2, 'R', 0) => NONE
(421, 'W', 1, 2, 'R', 25) => SHOOT
(422, 'W', 1, 2, 'R', 50) => STAY
(423, 'W', 1, 2, 'R', 75) => SHOOT
(424, 'W', 1, 2, 'R', 100) => STAY
(425, 'W', 1, 2, 'D', 0) => NONE
(426, 'W', 1, 2, 'D', 25) => SHOOT
(427, 'W', 1, 2, 'D', 50) => RIGHT
(428, 'W', 1, 2, 'D', 75) => RIGHT
(429, 'W', 1, 2, 'D', 100) => RIGHT
(430, 'W', 1, 3, 'R', 0) => NONE
(431, 'W', 1, 3, 'R', 25) => SHOOT
(432, 'W', 1, 3, 'R', 50) => SHOOT
(433, 'W', 1, 3, 'R', 75) => STAY
(434, 'W', 1, 3, 'R', 100) => SHOOT
(435, 'W', 1, 3, 'D', 0) => NONE
(436, 'W', 1, 3, 'D', 25) => RIGHT
(437, 'W', 1, 3, 'D', 50) => RIGHT
(438, 'W', 1, 3, 'D', 75) => RIGHT
(439, 'W', 1, 3, 'D', 100) => RIGHT
(440, 'W', 2, 0, 'R', 0) => NONE
(441, 'W', 2, 0, 'R', 25) => STAY
(442, 'W', 2, 0, 'R', 50) => STAY
(443, 'W', 2, 0, 'R', 75) => STAY
(444, 'W', 2, 0, 'R', 100) => RIGHT
(445, 'W', 2, 0, 'D', 0) => NONE
(446, 'W', 2, 0, 'D', 25) => RIGHT
(447, 'W', 2, 0, 'D', 50) => RIGHT
(448, 'W', 2, 0, 'D', 75) => RIGHT
(449, 'W', 2, 0, 'D', 100) => RIGHT
(450, 'W', 2, 1, 'R', 0) => NONE
(451, 'W', 2, 1, 'R', 25) => STAY
(452, 'W', 2, 1, 'R', 50) => SHOOT
(453, 'W', 2, 1, 'R', 75) => SHOOT
(454, 'W', 2, 1, 'R', 100) => SHOOT
(455, 'W', 2, 1, 'D', 0) => NONE
(456, 'W', 2, 1, 'D', 25) => RIGHT
(457, 'W', 2, 1, 'D', 50) => RIGHT
(458, 'W', 2, 1, 'D', 75) => RIGHT
(459, 'W', 2, 1, 'D', 100) => RIGHT
(460, 'W', 2, 2, 'R', 0) => NONE
(461, 'W', 2, 2, 'R', 25) => SHOOT
(462, 'W', 2, 2, 'R', 50) => STAY
(463, 'W', 2, 2, 'R', 75) => SHOOT
(464, 'W', 2, 2, 'R', 100) => STAY
(465, 'W', 2, 2, 'D', 0) => NONE
(466, 'W', 2, 2, 'D', 25) => SHOOT
(467, 'W', 2, 2, 'D', 50) => RIGHT
(468, 'W', 2, 2, 'D', 75) => RIGHT
(469, 'W', 2, 2, 'D', 100) => RIGHT
(470, 'W', 2, 3, 'R', 0) => NONE
(471, 'W', 2, 3, 'R', 25) => STAY
(472, 'W', 2, 3, 'R', 50) => SHOOT
(473, 'W', 2, 3, 'R', 75) => STAY
(474, 'W', 2, 3, 'R', 100) => SHOOT
(475, 'W', 2, 3, 'D', 0) => NONE
(476, 'W', 2, 3, 'D', 25) => STAY
(477, 'W', 2, 3, 'D', 50) => RIGHT
(478, 'W', 2, 3, 'D', 75) => RIGHT
(479, 'W', 2, 3, 'D', 100) => RIGHT
(480, 'E', 0, 0, 'R', 0) => NONE
(481, 'E', 0, 0, 'R', 25) => HIT
(482, 'E', 0, 0, 'R', 50) => HIT
(483, 'E', 0, 0, 'R', 75) => HIT
(484, 'E', 0, 0, 'R', 100) => HIT
(485, 'E', 0, 0, 'D', 0) => NONE
(486, 'E', 0, 0, 'D', 25) => HIT
(487, 'E', 0, 0, 'D', 50) => HIT
(488, 'E', 0, 0, 'D', 75) => HIT
(489, 'E', 0, 0, 'D', 100) => HIT
(490, 'E', 0, 1, 'R', 0) => NONE
(491, 'E', 0, 1, 'R', 25) => SHOOT
(492, 'E', 0, 1, 'R', 50) => SHOOT
(493, 'E', 0, 1, 'R', 75) => SHOOT
(494, 'E', 0, 1, 'R', 100) => SHOOT
(495, 'E', 0, 1, 'D', 0) => NONE
(496, 'E', 0, 1, 'D', 25) => SHOOT
(497, 'E', 0, 1, 'D', 50) => SHOOT
(498, 'E', 0, 1, 'D', 75) => SHOOT
(499, 'E', 0, 1, 'D', 100) => HIT
(500, 'E', 0, 2, 'R', 0) => NONE
(501, 'E', 0, 2, 'R', 25) => SHOOT
(502, 'E', 0, 2, 'R', 50) => SHOOT
(503, 'E', 0, 2, 'R', 75) => SHOOT
(504, 'E', 0, 2, 'R', 100) => HIT
(505, 'E', 0, 2, 'D', 0) => NONE
(506, 'E', 0, 2, 'D', 25) => SHOOT
(507, 'E', 0, 2, 'D', 50) => SHOOT
(508, 'E', 0, 2, 'D', 75) => SHOOT
(509, 'E', 0, 2, 'D', 100) => HIT
(510, 'E', 0, 3, 'R', 0) => NONE
(511, 'E', 0, 3, 'R', 25) => SHOOT
(512, 'E', 0, 3, 'R', 50) => SHOOT
(513, 'E', 0, 3, 'R', 75) => SHOOT
(514, 'E', 0, 3, 'R', 100) => HIT
(515, 'E', 0, 3, 'D', 0) => NONE
(516, 'E', 0, 3, 'D', 25) => SHOOT
(517, 'E', 0, 3, 'D', 50) => SHOOT
(518, 'E', 0, 3, 'D', 75) => SHOOT
(519, 'E', 0, 3, 'D', 100) => SHOOT
(520, 'E', 1, 0, 'R', 0) => NONE
(521, 'E', 1, 0, 'R', 25) => HIT
(522, 'E', 1, 0, 'R', 50) => HIT
(523, 'E', 1, 0, 'R', 75) => HIT
(524, 'E', 1, 0, 'R', 100) => HIT
(525, 'E', 1, 0, 'D', 0) => NONE
(526, 'E', 1, 0, 'D', 25) => HIT
(527, 'E', 1, 0, 'D', 50) => HIT
(528, 'E', 1, 0, 'D', 75) => HIT
(529, 'E', 1, 0, 'D', 100) => HIT
(530, 'E', 1, 1, 'R', 0) => NONE
(531, 'E', 1, 1, 'R', 25) => SHOOT
(532, 'E', 1, 1, 'R', 50) => SHOOT
(533, 'E', 1, 1, 'R', 75) => SHOOT
(534, 'E', 1, 1, 'R', 100) => HIT
(535, 'E', 1, 1, 'D', 0) => NONE
(536, 'E', 1, 1, 'D', 25) => SHOOT
(537, 'E', 1, 1, 'D', 50) => SHOOT
(538, 'E', 1, 1, 'D', 75) => SHOOT
(539, 'E', 1, 1, 'D', 100) => HIT
(540, 'E', 1, 2, 'R', 0) => NONE
(541, 'E', 1, 2, 'R', 25) => SHOOT
(542, 'E', 1, 2, 'R', 50) => SHOOT
(543, 'E', 1, 2, 'R', 75) => SHOOT
(544, 'E', 1, 2, 'R', 100) => HIT
(545, 'E', 1, 2, 'D', 0) => NONE
(546, 'E', 1, 2, 'D', 25) => SHOOT
(547, 'E', 1, 2, 'D', 50) => SHOOT
(548, 'E', 1, 2, 'D', 75) => SHOOT
(549, 'E', 1, 2, 'D', 100) => HIT
(550, 'E', 1, 3, 'R', 0) => NONE
(551, 'E', 1, 3, 'R', 25) => SHOOT
(552, 'E', 1, 3, 'R', 50) => SHOOT
(553, 'E', 1, 3, 'R', 75) => SHOOT
(554, 'E', 1, 3, 'R', 100) => HIT
(555, 'E', 1, 3, 'D', 0) => NONE
(556, 'E', 1, 3, 'D', 25) => SHOOT
(557, 'E', 1, 3, 'D', 50) => SHOOT
(558, 'E', 1, 3, 'D', 75) => SHOOT
(559, 'E', 1, 3, 'D', 100) => SHOOT
(560, 'E', 2, 0, 'R', 0) => NONE
(561, 'E', 2, 0, 'R', 25) => HIT
(562, 'E', 2, 0, 'R', 50) => HIT
(563, 'E', 2, 0, 'R', 75) => HIT
(564, 'E', 2, 0, 'R', 100) => HIT
(565, 'E', 2, 0, 'D', 0) => NONE
(566, 'E', 2, 0, 'D', 25) => HIT
(567, 'E', 2, 0, 'D', 50) => HIT
(568, 'E', 2, 0, 'D', 75) => HIT
(569, 'E', 2, 0, 'D', 100) => HIT
(570, 'E', 2, 1, 'R', 0) => NONE
(571, 'E', 2, 1, 'R', 25) => SHOOT
(572, 'E', 2, 1, 'R', 50) => SHOOT
(573, 'E', 2, 1, 'R', 75) => SHOOT
(574, 'E', 2, 1, 'R', 100) => HIT
(575, 'E', 2, 1, 'D', 0) => NONE
(576, 'E', 2, 1, 'D', 25) => SHOOT
(577, 'E', 2, 1, 'D', 50) => SHOOT
(578, 'E', 2, 1, 'D', 75) => SHOOT
(579, 'E', 2, 1, 'D', 100) => HIT
(580, 'E', 2, 2, 'R', 0) => NONE
(581, 'E', 2, 2, 'R', 25) => SHOOT
(582, 'E', 2, 2, 'R', 50) => SHOOT
(583, 'E', 2, 2, 'R', 75) => SHOOT
(584, 'E', 2, 2, 'R', 100) => HIT
(585, 'E', 2, 2, 'D', 0) => NONE
(586, 'E', 2, 2, 'D', 25) => SHOOT
(587, 'E', 2, 2, 'D', 50) => SHOOT
(588, 'E', 2, 2, 'D', 75) => SHOOT
(589, 'E', 2, 2, 'D', 100) => HIT
(590, 'E', 2, 3, 'R', 0) => NONE
(591, 'E', 2, 3, 'R', 25) => SHOOT
(592, 'E', 2, 3, 'R', 50) => SHOOT
(593, 'E', 2, 3, 'R', 75) => SHOOT
(594, 'E', 2, 3, 'R', 100) => HIT
(595, 'E', 2, 3, 'D', 0) => NONE
(596, 'E', 2, 3, 'D', 25) => SHOOT
(597, 'E', 2, 3, 'D', 50) => SHOOT
(598, 'E', 2, 3, 'D', 75) => SHOOT
(599, 'E', 2, 3, 'D', 100) => SHOOT
